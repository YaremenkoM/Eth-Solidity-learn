{
  "id": "10e4d7e5e8468b9a1b778ddec2d9633d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/MashToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"./Stakeable.sol\";\n\n// contract MashToken is ERC20, Ownable, Stakeable {\n  contract MashToken {\n    // constructor(uint256 initialSupply) ERC20(\"MashToken\", \"MASH\") {\n    //     _mint(msg.sender, initialSupply);\n    // }\n\n    constructor()  {\n    }\n\n\n    // function stake(uint256 _amount) external{\n    //   require(_amount < balanceOf(msg.sender), \"Cannot stake more than you own\");\n    //   require(_amount > 0, \"Need to stake smth, cant stake nothing\"); //this require was in stakeable contract (is it ok to put it here?)\n\n    //   _stake(_amount);\n    //   _burn(msg.sender, _amount);\n    // }\n\n    // function withdrawStake(uint256 amount, uint256 stake_index)  public {\n    //   uint256 amount_to_mint = _withdrawStake(amount, stake_index);\n    //   _mint(msg.sender, amount_to_mint);\n    // }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/MashToken.sol": {
        "MashToken": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200c5b09833e1f9a76ba8d74c0239d0a1776b2dadc38a0f3c9f9f57f0d119e75a964736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC JUMPDEST MULMOD DUP4 RETURNDATACOPY 0x1F SWAP11 PUSH23 0xBA8D74C0239D0A1776B2DADC38A0F3C9F9F57F0D119E75 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "257:727:0:-:0;;;408:22;;;;;;;;;;257:727;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212200c5b09833e1f9a76ba8d74c0239d0a1776b2dadc38a0f3c9f9f57f0d119e75a964736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC JUMPDEST MULMOD DUP4 RETURNDATACOPY 0x1F SWAP11 PUSH23 0xBA8D74C0239D0A1776B2DADC38A0F3C9F9F57F0D119E75 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "257:727:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      }
    },
    "sources": {
      "contracts/MashToken.sol": {
        "ast": {
          "absolutePath": "contracts/MashToken.sol",
          "exportedSymbols": {
            "MashToken": [
              6
            ]
          },
          "id": 7,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 6,
              "linearizedBaseContracts": [
                6
              ],
              "name": "MashToken",
              "nameLocation": "266:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 4,
                    "nodeType": "Block",
                    "src": "423:7:0",
                    "statements": []
                  },
                  "id": 5,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "419:2:0"
                  },
                  "returnParameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "423:0:0"
                  },
                  "scope": 6,
                  "src": "408:22:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 7,
              "src": "257:727:0",
              "usedErrors": []
            }
          ],
          "src": "32:952:0"
        },
        "id": 0
      }
    }
  }
}
